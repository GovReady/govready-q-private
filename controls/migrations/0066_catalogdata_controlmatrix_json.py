# Generated by Django 3.2.5 on 2021-11-01 10:20

from django.db import migrations, models
import os.path
import json

from controls.oscal import CatalogData

def load_catalog_data_controlmatrix(apps, schema_editor):
    """Load control catalog data into database"""

    # Load the default control catalogs and baselines
    CONTROLMATRIX_PATH = os.path.join(os.path.dirname(__file__),'..','data','controlmatrix')
    # BASELINE_PATH = os.path.join(os.path.dirname(__file__),'..','data','baselines')

    # TODO: Check directory exists
    controlmatrix_files = [file for file in os.listdir(CONTROLMATRIX_PATH) if file.endswith('.json')]
    # Load controlmatrix data into database records from source files if data records do not exist in database
    for cf in controlmatrix_files:
        catalog_key = cf.replace("_controlmatrix.json", "")
        controlmatrix_filename = cf.replace("_catalog.json", "_baselines.json")
        if os.path.isfile(os.path.join(CONTROLMATRIX_PATH, controlmatrix_filename)):
            with open(os.path.join(CONTROLMATRIX_PATH, controlmatrix_filename), 'r') as json_file:
                controlmatrix_json = json.load(json_file)
        else:
            controlmatrix_json = {}

        updated = CatalogData.objects.filter(catalog_key = catalog_key).update(
                catalog_key=catalog_key,
                controlmatrix_json=controlmatrix_json
            )
        if updated:
            print(f"{catalog_key} updated with control matrix data")
        else:
            print(f"{catalog_key} not updated with control matrix data")


class Migration(migrations.Migration):

    dependencies = [
        ('controls', '0065_auto_20211006_0240'),
    ]

    operations = [
        migrations.AddField(
            model_name='catalogdata',
            name='controlmatrix_json',
            field=models.JSONField(blank=True, help_text='JSON object representing the monitoring for the catalog.', null=True),
        ),
        migrations.RunPython(load_catalog_data_controlmatrix),
    ]
